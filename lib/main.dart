import 'package:english_words/english_words.dart';import 'package:flutter/material.dart';void main() => runApp(MyApp());class MyApp extends StatelessWidget {  // This widget is the root of your application.  @override  Widget build(BuildContext context) {     return MaterialApp(      theme: ThemeData(        primaryColor: Colors.white      ),            home: RandomWords()    );  }}class RandomWords extends StatefulWidget{  @override    RandomWordsState createState() => RandomWordsState();  //state class's instance is created in Statefull class}class RandomWordsState extends State<RandomWords>{  @override  Widget build(BuildContext context) {   // final WordPair wordPair = WordPair.random(); // random view    final List<WordPair> _suggestions = <WordPair>[];    final Set<WordPair> _saved = Set<WordPair>();    final TextStyle _biggerFont = const TextStyle(fontSize: 18);    Widget _buildList(WordPair pair){                     //like recycler view , like itemview      final bool alreadySaved = _saved.contains(pair);          return ListTile(          title: Text(            pair.asPascalCase,                style: _biggerFont,          ),            trailing: Icon(              alreadySaved ? Icons.favorite : Icons.favorite_border,              color: alreadySaved ? Colors.red : null,            ),            onTap: (){            setState(() { // to change stage when press heart icon              if(alreadySaved){                _saved.remove(pair);              }else{                _saved.add(pair);              }            });            },          );    }    Widget _buildSuggestions(){      return ListView.builder(        padding: EdgeInsets.all(16),          itemBuilder: (BuildContext, int i){          if(i.isOdd){            return Divider();          }            final int index = i ~/2;          if(index >= _suggestions.length){            _suggestions.addAll(generateWordPairs().take(10));          }          return _buildList(_suggestions[index]);          });    }    void _pushSaved(){      Navigator.of(context).push(        MaterialPageRoute<void>(          builder: (BuildContext context){            final Iterable<ListTile> tiles = _saved.map(                (WordPair pair){                  return ListTile(                    title: Text(                      pair.asPascalCase,                      style: _biggerFont,                    ),                  );                }            );            final List<Widget> divided =            ListTile.divideTiles(              context: context,                tiles: tiles).toList();            return Scaffold(              appBar: AppBar(                title: Text('Saved Suggestions'),              ),              body: ListView(                children: divided),            );          }        )      );    }    return Scaffold(      appBar: AppBar(        title: Text("English Word"),        actions: <Widget>[          IconButton(icon: Icon(Icons.list), onPressed: _pushSaved,)        ],      ),      body: _buildSuggestions(),    );  }}